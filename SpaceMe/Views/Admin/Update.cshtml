@model SpaceMe.Models.Post

@{
    ViewBag.Title = "Update";
}
<div class="adminform">
    <h4 class="text-center">Edit post</h4>
    <hr />
    @using (Html.BeginForm("Update", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal col-md-offset-1">
            <div class="text-danger text-center customerr">@Html.ValidationMessage("UpdateErr")</div>
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control br0" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    <img class="editable-img" src="@Url.Action("RetrieveImage", "Admin", new { Model.Id })" width="200" height="100" />
                    <div class="editor-field">
                        <input type="file" name="uploadImage" />
                    </div>
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control br0" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PostedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.PostedOn, new { htmlAttributes = new { @class = "form-control br0" } })
                    @Html.ValidationMessageFor(model => model.PostedOn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.TextAreaFor(model => model.Content, new { @class = "form-control br0", id = "editor" })
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group text-center">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" class="btn btn-default regbtn br0" value="Update" />
            </div>
        </div>
    }
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</div>

